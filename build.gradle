buildscript {
    ext {
        springBootVersion = "3.1.2"
        springDependencyManagementVerison = "1.1.0"
        springBootStarterValidation = "3.1.1"
        springWebfluxVerion = "6.0.11"
        springOAuth2ResourceServerVersion = "3.1.1"

        hypersistenceUtilsHibernateVersion = "3.6.0"
        zalandoProblemVersion = "0.29.1"
        owaspVersion = "8.1.2"
        flywayVersion = "9.16.1"
        jsonwebtokenVersion = "0.11.5"
        jaxbApiVersion = "2.3.1"
        jakartaValidationVersion = "3.0.2"
        springdocOpenapiStarterWebmvcUiVersion = "2.2.0"
        datasourceProxySpringBootStarterVersion = "1.9.0"

        junitJupiterVersion = "5.9.3"
        testcontainersVersion = "1.18.3"
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${springDependencyManagementVerison}"
    id "org.flywaydb.flyway" version "${flywayVersion}"
}

group = "com.luv2code"
version = "0.0.1-SNAPSHOT"

java {
    sourceCompatibility = "20"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

test {
    maxParallelForks = 3
}

dependencies {
    // Spring
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework:spring-webflux:$springWebfluxVerion"
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootStarterValidation"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:$springOAuth2ResourceServerVersion"

    // Hibernate
    implementation "io.hypersistence:hypersistence-utils-hibernate-62:$hypersistenceUtilsHibernateVersion"

    // Flyway
    implementation "org.flywaydb:flyway-core:$flywayVersion"

    // Zalando
    implementation "org.zalando:problem-spring-web-starter:$zalandoProblemVersion"
    implementation "org.zalando:problem-spring-web:$zalandoProblemVersion"

    // Jakarta Validation
    implementation "jakarta.validation:jakarta.validation-api:$jakartaValidationVersion"

    // Jwt
    implementation "io.jsonwebtoken:jjwt-api:$jsonwebtokenVersion"
    implementation "io.jsonwebtoken:jjwt-impl:$jsonwebtokenVersion"
    implementation "io.jsonwebtoken:jjwt-jackson:$jsonwebtokenVersion"

    // JAXB
    implementation "javax.xml.bind:jaxb-api:$jaxbApiVersion"

    // Datasource Proxy Spring Boot Starter
    implementation "com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:$datasourceProxySpringBootStarterVersion"

    // OpenAPI 3
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenapiStarterWebmvcUiVersion"

    compileOnly "org.projectlombok:lombok"

    runtimeOnly "org.postgresql:postgresql"

    annotationProcessor "org.projectlombok:lombok"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:testcontainers:$testcontainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
}

tasks.named("test") {
    useJUnitPlatform()
}
